// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ResumeFilter.API.Context;

#nullable disable

namespace ResumeFilter.API.Migrations
{
    [DbContext(typeof(ResumeFilterDbContext))]
    [Migration("20230929094727_updated")]
    partial class updated
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ResumeFilter.API.Models.Candidate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(254)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("ResumeId")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("TechStack")
                        .HasColumnType("varchar(254)");

                    b.Property<string>("UploadedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("UploadedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 29, 9, 47, 27, 373, DateTimeKind.Utc).AddTicks(8609));

                    b.Property<Guid>("VendorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VendorId");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("ResumeFilter.API.Models.TechStack", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(60)");

                    b.HasKey("Id");

                    b.ToTable("TechStacks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("76e1a134-81d5-4a0d-9b82-7efb826e04ca"),
                            Name = "React, dotnet, Azure"
                        },
                        new
                        {
                            Id = new Guid("cbc23e6a-d503-44f9-83d1-86a1ceadf862"),
                            Name = "Angular, dotnet, Azure"
                        },
                        new
                        {
                            Id = new Guid("4afd9bbf-ed1f-44cc-9bfc-0af4f4cd3294"),
                            Name = "React, java, Azure"
                        });
                });

            modelBuilder.Entity("ResumeFilter.API.Models.Vendor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Vendors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("472cbfc2-35a9-4285-9f1f-b2189d73cde6"),
                            Name = "Hema"
                        },
                        new
                        {
                            Id = new Guid("a92cffec-1524-417c-a671-1dce8b3ac538"),
                            Name = "Sudha"
                        },
                        new
                        {
                            Id = new Guid("1607973a-a0ea-422c-ad5d-e7b0b301f33c"),
                            Name = "prem"
                        },
                        new
                        {
                            Id = new Guid("7a297872-665a-4ff8-863b-c158fc45cb32"),
                            Name = "Vaishnavi"
                        },
                        new
                        {
                            Id = new Guid("1ad1f980-5198-442d-9eab-7b4cf548a9da"),
                            Name = "Abi"
                        });
                });

            modelBuilder.Entity("ResumeFilter.API.Models.Candidate", b =>
                {
                    b.HasOne("ResumeFilter.API.Models.Vendor", "Vendor")
                        .WithMany("Candidates")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("ResumeFilter.API.Models.Vendor", b =>
                {
                    b.Navigation("Candidates");
                });
#pragma warning restore 612, 618
        }
    }
}
