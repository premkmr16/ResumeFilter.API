// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ResumeFilter.API.Context;

#nullable disable

namespace ResumeFilter.API.Migrations
{
    [DbContext(typeof(ResumeFilterDbContext))]
    partial class ResumeFilterDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ResumeFilter.API.Models.Candidate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(254)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("ResumeId")
                        .HasColumnType("varchar(60)");

                    b.Property<Guid>("TechStackId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UploadedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("UploadedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 29, 9, 52, 14, 126, DateTimeKind.Utc).AddTicks(8048));

                    b.Property<Guid>("VendorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TechStackId");

                    b.HasIndex("VendorId");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("ResumeFilter.API.Models.TechStack", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(60)");

                    b.HasKey("Id");

                    b.ToTable("TechStacks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("53fd680f-cc17-4280-add4-eb1ba39abdf9"),
                            Name = "React, dotnet, Azure"
                        },
                        new
                        {
                            Id = new Guid("9aeeada7-5325-4abd-8b9c-3d1393fc27a1"),
                            Name = "Angular, dotnet, Azure"
                        },
                        new
                        {
                            Id = new Guid("508d71e2-a90e-4f28-bfaa-f08994b8f01e"),
                            Name = "React, java, Azure"
                        });
                });

            modelBuilder.Entity("ResumeFilter.API.Models.Vendor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Vendors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8e4910ce-f358-411e-80de-3f38d8c9ef23"),
                            Name = "Hema"
                        },
                        new
                        {
                            Id = new Guid("bf02241e-db05-4fbf-a04a-9dbb864559b6"),
                            Name = "Sudha"
                        },
                        new
                        {
                            Id = new Guid("f7cb0aac-3d13-4139-9c57-19b6bffa6d1c"),
                            Name = "prem"
                        },
                        new
                        {
                            Id = new Guid("3646c493-12d1-40dd-8f8c-c0469ecce665"),
                            Name = "Vaishnavi"
                        },
                        new
                        {
                            Id = new Guid("55479f37-65cd-48e0-a397-498b90622249"),
                            Name = "Abi"
                        });
                });

            modelBuilder.Entity("ResumeFilter.API.Models.Candidate", b =>
                {
                    b.HasOne("ResumeFilter.API.Models.TechStack", "TechStack")
                        .WithMany("Candidates")
                        .HasForeignKey("TechStackId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ResumeFilter.API.Models.Vendor", "Vendor")
                        .WithMany("Candidates")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TechStack");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("ResumeFilter.API.Models.TechStack", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("ResumeFilter.API.Models.Vendor", b =>
                {
                    b.Navigation("Candidates");
                });
#pragma warning restore 612, 618
        }
    }
}
